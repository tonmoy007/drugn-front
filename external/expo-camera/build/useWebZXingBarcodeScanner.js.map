{"version":3,"file":"useWebZXingBarcodeScanner.js","sourceRoot":"","sources":["../src/useWebZXingBarcodeScanner.ts"],"names":[],"mappings":"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","sourcesContent":["import { useWorker } from '@koale/useworker';\nimport * as React from 'react';\n\nimport { BarCodeScanningResult, CameraPictureOptions, MountErrorListener } from './Camera.types';\nimport { captureImageData } from './WebCameraUtils';\n\nconst barcodeWorkerMethod = (\n  barCodeTypes: string[],\n  { data, width, height }: ImageData\n): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    try {\n      const {\n        BarcodeFormat,\n        BinaryBitmap,\n        DecodeHintType,\n        HybridBinarizer,\n        MultiFormatReader,\n        RGBLuminanceSource,\n      } = (self as any).ZXing;\n\n      const toLuminanceBuffer = (imageBuffer: Uint8ClampedArray, width: number, height: number) => {\n        const luminanceBuffer = new Uint8ClampedArray(width * height);\n        for (let i = 0, j = 0, length = imageBuffer.length; i < length; i += 4, j++) {\n          let luminance: number;\n          const alpha = imageBuffer[i + 3];\n          if (alpha === 0) {\n            luminance = 0xff;\n          } else {\n            const r = imageBuffer[i];\n            const g = imageBuffer[i + 1];\n            const b = imageBuffer[i + 2];\n            luminance = (306 * r + 601 * g + 117 * b) >> 10;\n          }\n          luminanceBuffer[j] = luminance;\n        }\n        return luminanceBuffer;\n      };\n      const luminanceBuffer = toLuminanceBuffer(data, width, height);\n\n      const luminanceSource = new RGBLuminanceSource(luminanceBuffer, width, height);\n\n      const binaryBitmap = new BinaryBitmap(new HybridBinarizer(luminanceSource));\n\n      const hints = new Map();\n      hints.set(\n        DecodeHintType.POSSIBLE_FORMATS,\n        [\n          barCodeTypes.includes('aztec') && BarcodeFormat.AZTEC,\n          barCodeTypes.includes('codabar') && BarcodeFormat.CODABAR,\n          barCodeTypes.includes('code39') && BarcodeFormat.CODE_39,\n          barCodeTypes.includes('code128') && BarcodeFormat.CODE_128,\n          barCodeTypes.includes('datamatrix') && BarcodeFormat.DATAMATRIX,\n          barCodeTypes.includes('ean8') && BarcodeFormat.EAN_8,\n          barCodeTypes.includes('ean13') && BarcodeFormat.EAN_13,\n          barCodeTypes.includes('interleaved2of5') && BarcodeFormat.ITF,\n          barCodeTypes.includes('pdf417') && BarcodeFormat.PDF_417,\n          barCodeTypes.includes('qr') && BarcodeFormat.QR_CODE,\n          barCodeTypes.includes('upc_a') && BarcodeFormat.UPC_A,\n          barCodeTypes.includes('upc_e') && BarcodeFormat.UPC_E,\n          barCodeTypes.includes('rss14')&&BarcodeFormat.RSS_14,\n          barCodeTypes.includes('rssExpanded')&&BarcodeFormat.RSS_EXPANDED,\n          barCodeTypes.includes('upc_e_e')&&BarcodeFormat.UPC_EAN_EXTENSION,\n          barCodeTypes.includes('maxicode')&&BarcodeFormat.MAXICODE,\n        ].filter((e) => e)\n      );\n\n      const reader = new MultiFormatReader(hints);\n\n      const result = reader.decode(binaryBitmap, hints);\n      console.log(result)\n      const type =\n        result.getBarcodeFormat() === BarcodeFormat.AZTEC\n          ? 'aztec'\n          : result.getBarcodeFormat() === BarcodeFormat.CODABAR\n          ? 'codabar'\n          : result.getBarcodeFormat() === BarcodeFormat.CODE_39\n          ? 'code39'\n          : result.getBarcodeFormat() === BarcodeFormat.CODE_128\n          ? 'code128'\n          : result.getBarcodeFormat() === BarcodeFormat.DATAMATRIX\n          ? 'datamatrix'\n          : result.getBarcodeFormat() === BarcodeFormat.EAN_8\n          ? 'ean8'\n          : result.getBarcodeFormat() === BarcodeFormat.EAN_13\n          ? 'ean13'\n          : result.getBarcodeFormat() === BarcodeFormat.ITF\n          ? 'interleaved2of5'\n          : result.getBarcodeFormat() === BarcodeFormat.PDF_417\n          ? 'pdf417'\n          : result.getBarcodeFormat() === BarcodeFormat.QR_CODE\n          ? 'qr'\n          : result.getBarcodeFormat() === BarcodeFormat.UPC_A\n          ? 'upc_a'\n          : result.getBarcodeFormat() === BarcodeFormat.UPC_E\n          ? 'upc_e'\n          : `Unknown format (${result.getBarcodeFormat()})`;\n\n      const nativeEvent: BarCodeScanningResult = {\n        type,\n        data: result.getText(),\n        cornerPoints: [],\n        bounds: { origin: { x: 0, y: 0 }, size: { width: 0, height: 0 } },\n      };\n      resolve(nativeEvent);\n    } catch (e) {\n      if (e.constructor.name === 'NotFoundException') {\n        return resolve(undefined);\n      } else if (e.constructor.name === 'ChecksumException') {\n        return resolve(undefined);\n      } else if (e.constructor.name === 'FormatException') {\n        return resolve(undefined);\n      }\n      console.error(e);\n    }\n  });\n};\n\nfunction useRemoteJavascriptBarcodeReader() {\n  return useWorker(barcodeWorkerMethod, {\n    remoteDependencies: ['https://cdn.jsdelivr.net/npm/@zxing/library@0.19.1/umd/index.js'],\n    autoTerminate: false,\n  });\n}\n\nexport function useWebZXingBarcodeScanner(\n  video: React.MutableRefObject<HTMLVideoElement | null>,\n  {\n    barCodeTypes,\n    isEnabled,\n    captureOptions,\n    interval,\n    onScanned,\n    onError,\n  }: {\n    barCodeTypes: string[];\n    isEnabled: boolean;\n    captureOptions: Pick<CameraPictureOptions, 'scale' | 'isImageMirror'>;\n    interval?: number;\n    onScanned?: (scanningResult: { nativeEvent: BarCodeScanningResult }) => void;\n    onError?: MountErrorListener;\n  }\n) {\n  const isRunning = React.useRef<boolean>(false);\n  const timeout = React.useRef<number | undefined>(undefined);\n\n  const [decode, clearWorker] = useRemoteJavascriptBarcodeReader();\n\n  async function scanAsync() {\n    // If interval is 0 then only scan once.\n    if (!isRunning.current || !onScanned) {\n      stop();\n      return;\n    }\n    try {\n      const data = captureImageData(video.current, captureOptions);\n\n      if (data) {\n        const nativeEvent: BarCodeScanningResult | any = await decode(barCodeTypes, data);\n        if (nativeEvent?.data) {\n          onScanned({\n            nativeEvent,\n          });\n        }\n      }\n    } catch (error) {\n      if (onError) {\n        onError({ nativeEvent: error });\n      }\n    } finally {\n      // If interval is 0 then only scan once.\n      if (interval === 0) {\n        stop();\n        return;\n      }\n      const intervalToUse = !interval || interval < 0 ? 16 : interval;\n      // @ts-ignore: Type 'Timeout' is not assignable to type 'number'\n      timeout.current = setTimeout(() => {\n        scanAsync();\n      }, intervalToUse);\n    }\n  }\n\n  function stop() {\n    isRunning.current = false;\n    clearTimeout(timeout.current);\n  }\n\n  React.useEffect(() => {\n    if (isEnabled) {\n      isRunning.current = true;\n      scanAsync();\n    } else {\n      stop();\n    }\n  }, [isEnabled]);\n\n  React.useEffect(() => {\n    return () => {\n      stop();\n      clearWorker.kill();\n    };\n  }, []);\n}\n"]}