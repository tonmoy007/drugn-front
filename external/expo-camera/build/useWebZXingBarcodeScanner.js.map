{"version":3,"file":"useWebZXingBarcodeScanner.js","sourceRoot":"","sources":["../src/useWebZXingBarcodeScanner.ts"],"names":[],"mappings":"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","sourcesContent":["import {useWorker} from '@koale/useworker';\nimport * as React from 'react';\nimport {captureImageData} from './WebCameraUtils';\n\nconst barcodeWorkerMethod = (barCodeTypes, {data, width, height}) => {\n    return new Promise((resolve, reject) => {\n        try {\n            const {\n                BarcodeFormat,\n                BinaryBitmap,\n                DecodeHintType,\n                HybridBinarizer,\n                MultiFormatReader,\n                RGBLuminanceSource,\n            } = (self as any).ZXing;\n            const toLuminanceBuffer = (imageBuffer, width, height) => {\n                const luminanceBuffer = new Uint8ClampedArray(width * height);\n                for (let i = 0, j = 0, length = imageBuffer.length; i < length; i += 4, j++) {\n                    let luminance;\n                    const alpha = imageBuffer[i + 3];\n                    if (alpha === 0) {\n                        luminance = 0xff;\n                    } else {\n                        const r = imageBuffer[i];\n                        const g = imageBuffer[i + 1];\n                        const b = imageBuffer[i + 2];\n                        luminance = (306 * r + 601 * g + 117 * b) >> 10;\n                    }\n                    luminanceBuffer[j] = luminance;\n                }\n                return luminanceBuffer;\n            };\n            const luminanceBuffer = toLuminanceBuffer(data, width, height);\n            const luminanceSource = new RGBLuminanceSource(luminanceBuffer, width, height);\n            const binaryBitmap = new BinaryBitmap(new HybridBinarizer(luminanceSource));\n            const hints = new Map();\n            hints.set(DecodeHintType.POSSIBLE_FORMATS, [\n                barCodeTypes.includes('aztec') && BarcodeFormat.AZTEC,\n                barCodeTypes.includes('codabar') && BarcodeFormat.CODABAR,\n                barCodeTypes.includes('code39') && BarcodeFormat.CODE_39,\n                barCodeTypes.includes('code128') && BarcodeFormat.CODE_128,\n                barCodeTypes.includes('datamatrix') && BarcodeFormat.DATAMATRIX,\n                barCodeTypes.includes('ean8') && BarcodeFormat.EAN_8,\n                barCodeTypes.includes('ean13') && BarcodeFormat.EAN_13,\n                barCodeTypes.includes('interleaved2of5') && BarcodeFormat.ITF,\n                barCodeTypes.includes('pdf417') && BarcodeFormat.PDF_417,\n                barCodeTypes.includes('qr') && BarcodeFormat.QR_CODE,\n                barCodeTypes.includes('upc_a') && BarcodeFormat.UPC_A,\n                barCodeTypes.includes('upc_e') && BarcodeFormat.UPC_E,\n                barCodeTypes.includes('rss14') && BarcodeFormat.RSS_14,\n                barCodeTypes.includes('rssExpanded') && BarcodeFormat.RSS_EXPANDED,\n                barCodeTypes.includes('upc_e_e') && BarcodeFormat.UPC_EAN_EXTENSION,\n                barCodeTypes.includes('maxicode') && BarcodeFormat.MAXICODE,\n            ].filter((e) => e));\n            const reader = new MultiFormatReader(hints);\n            const result = reader.decode(binaryBitmap, hints);\n            console.log(result);\n            const type = result.getBarcodeFormat() === BarcodeFormat.AZTEC\n                ? 'aztec'\n                : result.getBarcodeFormat() === BarcodeFormat.CODABAR\n                    ? 'codabar'\n                    : result.getBarcodeFormat() === BarcodeFormat.CODE_39\n                        ? 'code39'\n                        : result.getBarcodeFormat() === BarcodeFormat.CODE_128\n                            ? 'code128'\n                            : result.getBarcodeFormat() === BarcodeFormat.DATAMATRIX\n                                ? 'datamatrix'\n                                : result.getBarcodeFormat() === BarcodeFormat.EAN_8\n                                    ? 'ean8'\n                                    : result.getBarcodeFormat() === BarcodeFormat.EAN_13\n                                        ? 'ean13'\n                                        : result.getBarcodeFormat() === BarcodeFormat.ITF\n                                            ? 'interleaved2of5'\n                                            : result.getBarcodeFormat() === BarcodeFormat.PDF_417\n                                                ? 'pdf417'\n                                                : result.getBarcodeFormat() === BarcodeFormat.QR_CODE\n                                                    ? 'qr'\n                                                    : result.getBarcodeFormat() === BarcodeFormat.UPC_A\n                                                        ? 'upc_a'\n                                                        : result.getBarcodeFormat() === BarcodeFormat.UPC_E\n                                                            ? 'upc_e'\n                                                            : `Unknown format (${result.getBarcodeFormat()})`;\n            const nativeEvent = {\n                type,\n                data: result.getText(),\n                cornerPoints: [],\n                bounds: {origin: {x: 0, y: 0}, size: {width: 0, height: 0}},\n            };\n            resolve(nativeEvent);\n        } catch (e) {\n            if (e.constructor.name === 'NotFoundException') {\n                return resolve(undefined);\n            } else if (e.constructor.name === 'ChecksumException') {\n                return resolve(undefined);\n            } else if (e.constructor.name === 'FormatException') {\n                return resolve(undefined);\n            }\n            console.error(e);\n        }\n    });\n};\n\nfunction useRemoteJavascriptBarcodeReader() {\n    return useWorker(barcodeWorkerMethod, {\n        remoteDependencies: ['https://cdn.jsdelivr.net/npm/@zxing/library@0.19.1/umd/index.js'],\n        autoTerminate: false,\n    });\n}\n\nexport function useWebZXingBarcodeScanner(video, {\n    barCodeTypes,\n    isEnabled,\n    captureOptions,\n    interval,\n    onScanned,\n    onError,\n}) {\n    const isRunning = React.useRef(false);\n    const timeout = React.useRef(undefined);\n    const [decode, clearWorker] = useRemoteJavascriptBarcodeReader();\n\n    async function scanAsync() {\n        // If interval is 0 then only scan once.\n        if (!isRunning.current || !onScanned) {\n            stop();\n            return;\n        }\n        try {\n            const data = captureImageData(video.current, captureOptions);\n            if (data) {\n                const nativeEvent: any = await decode(barCodeTypes, data);\n                if (nativeEvent?.data) {\n                    onScanned({\n                        nativeEvent,\n                    });\n                }\n            }\n        } catch (error) {\n            if (onError) {\n                onError({nativeEvent: error});\n            }\n        } finally {\n            // If interval is 0 then only scan once.\n            if (interval === 0) {\n                stop();\n                return;\n            }\n            const intervalToUse = !interval || interval < 0 ? 16 : interval;\n            // @ts-ignore: Type 'Timeout' is not assignable to type 'number'\n            timeout.current = setTimeout(() => {\n                scanAsync();\n            }, intervalToUse);\n        }\n    }\n\n    function stop() {\n        isRunning.current = false;\n        clearTimeout(timeout.current);\n    }\n\n    React.useEffect(() => {\n        if (isEnabled) {\n            isRunning.current = true;\n            scanAsync();\n        } else {\n            stop();\n        }\n    }, [isEnabled]);\n    React.useEffect(() => {\n        return () => {\n            stop();\n            clearWorker.kill();\n        };\n    }, []);\n}\n\n//# sourceMappingURL=useWebZXingBarcodeScanner.js.map"]}